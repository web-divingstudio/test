(() => { let e; function t(e, t, n, o, i) { o = o || 0, i = i || 0, this.identifier = t, this.target = e, this.clientX = n.clientX + o, this.clientY = n.clientY + i, this.screenX = n.screenX + o, this.screenY = n.screenY + i, this.pageX = n.pageX + o, this.pageY = n.pageY + i } function n() { const e = []; return e.item = function (e) { return this[e] || null }, e } function o(e) { e.preventDefault(), e.stopPropagation() } const i = ["TEXTAREA", "INPUT", "SELECT"]; function s(t) { return function (n) { i.indexOf(n.target.tagName) < 0 && o(n), 1 === n.which && (("mousedown" === n.type || !e || e && !e.dispatchEvent) && (e = n.target), function (t, n) { const o = document.createEvent("Event"); o.initEvent(t, !0, !0), o.touches = u(n), o.targetTouches = u(n), o.changedTouches = c(n), e.dispatchEvent(o) }(t, n), "mouseup" === n.type && (e = null)) } } function c(o) { const i = new n; return i.push(new t(e, 1, o, 0, 0)), i } function u(e) { return "mouseup" === e.type ? new n : c(e) } let r = null; function d(e) { if (!r) { r = document.createElement("div"); const e = r.style; e.display = "none", e.position = "fixed", e.background = "#fff", e.border = "solid 1px #999", e.opacity = .6, e.borderRadius = "100%", e.height = "30px", e.width = "30px", e.overflow = "hidden", e.pointerEvents = "none", e.userSelect = "none", document.body.appendChild(r) } switch (e.type) { case "touchend": r.style.display = "none"; break; case "touchstart": r.style.display = "block"; case "touchmove": r.style.transform = "translate(" + (e.touches[0].clientX - 15) + "px, " + (e.touches[0].clientY - 15) + "px)" } } "ontouchstart" in window || navigator.maxTouchPoints > 2 || (Object.defineProperty(window.navigator, "maxTouchPoints", { get: function () { return 2 } }), function () { const e = [window, document.documentElement], t = ["ontouchstart", "ontouchmove", "ontouchcancel", "ontouchend"]; for (let n = 0; n < e.length; n++)for (let o = 0; o < t.length; o++)e[n] && void 0 === e[n][t[o]] && (e[n][t[o]] = null) }(), addEventListener("mousedown", s("touchstart"), !0), addEventListener("mousemove", s("touchmove"), !0), addEventListener("mouseup", s("touchend"), !0), addEventListener("mouseenter", o, !0), addEventListener("mouseleave", o, !0), addEventListener("mouseout", o, !0), addEventListener("mouseover", o, !0), addEventListener("touchstart", d, !1), addEventListener("touchmove", d, !1), addEventListener("touchend", d, !1)) })()
