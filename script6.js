!function () { function e() { let e = ""; if (window.crypto && window.crypto.getRandomValues) { const t = new Uint8Array(12); window.crypto.getRandomValues(t); for (let n = 0; n < t.length; n++)e += String.fromCharCode(t[n]) } else { const t = [(navigator.userAgent || navigator.vendor || window.opera) + Math.random(), (navigator.language || "") + window.innerWidth + window.innerHeight + Math.random()]; try { t.push(JSON.stringify(window.performance) + Math.random()) } catch (e) { t.push((new Date).valueOf().toString()) } for (let n = 0; n < 3; n++) { let i = window.murmurhash3_32_gc(t[n]); for (let t = 0; t < 4; t++)e += String.fromCharCode(255 & i), i >>= 8 } } return btoa(e) } function t() { try { if ("object" == typeof WebAssembly && "function" == typeof WebAssembly.instantiate) { const e = new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0])); if (e instanceof WebAssembly.Module) return new WebAssembly.Instance(e) instanceof WebAssembly.Instance } } catch (e) { } return !1 } window.murmurhash3_32_gc = function (e, t) { var n, i, o, s, a, r, l, d; for (n = 3 & e.length, i = e.length - n, o = t, a = 3432918353, r = 461845907, d = 0; d < i;)l = 255 & e.charCodeAt(d) | (255 & e.charCodeAt(++d)) << 8 | (255 & e.charCodeAt(++d)) << 16 | (255 & e.charCodeAt(++d)) << 24, ++d, o = 27492 + (65535 & (s = 5 * (65535 & (o = (o ^= l = (65535 & (l = (l = (65535 & l) * a + (((l >>> 16) * a & 65535) << 16) & 4294967295) << 15 | l >>> 17)) * r + (((l >>> 16) * r & 65535) << 16) & 4294967295) << 13 | o >>> 19)) + ((5 * (o >>> 16) & 65535) << 16) & 4294967295)) + ((58964 + (s >>> 16) & 65535) << 16); switch (l = 0, n) { case 3: l ^= (255 & e.charCodeAt(d + 2)) << 16; case 2: l ^= (255 & e.charCodeAt(d + 1)) << 8; case 1: o ^= l = (65535 & (l = (l = (65535 & (l ^= 255 & e.charCodeAt(d))) * a + (((l >>> 16) * a & 65535) << 16) & 4294967295) << 15 | l >>> 17)) * r + (((l >>> 16) * r & 65535) << 16) & 4294967295 }return o ^= e.length, o = 2246822507 * (65535 & (o ^= o >>> 16)) + ((2246822507 * (o >>> 16) & 65535) << 16) & 4294967295, o = 3266489909 * (65535 & (o ^= o >>> 13)) + ((3266489909 * (o >>> 16) & 65535) << 16) & 4294967295, (o ^= o >>> 16) >>> 0 }; const n = window.performance && window.performance.now && window.performance.timing ? function () { return window.performance.now() } : Date.now, i = function (o, s, a, r, l, d, E, c, h, u) { this.env = { screenWidth: window.innerWidth, screenHeight: window.innerHeight, sessionId: e(), signature: r, locale: (navigator.language || "").split("-")[0] || "xx", version: 1, appId: s, adNetwork: o, buildId: a, wasm: t(), permutationId: 0, lastPing: 0, interactionClientX: 0, interactionClientY: 0, isRewarded: i.IS_REWARDED_UNKNOWN, webglVersion: window.WebGL2RenderingContext ? 2 : 1 }, this.eventSequenceNumbers = {}, this.totalEvents = 0, this.permutationWhitelist = h, this.statsUrl = l, this.configUrl = d, this.errorEndpointUrl = u; const m = n(); this.timestamps = { default: { timestamp: m, previousTimestamp: m }, system: { timestamp: m, previousTimestamp: m } }, this.frameTimestamp = 1e9, this.configTimeout = E, this.configDelay = c; const g = navigator.userAgent || navigator.vendor || window.opera, _ = navigator.maxTouchPoints && navigator.maxTouchPoints > 2; /windows phone/i.test(g) ? this.env.os = "wp" : /android/i.test(g) ? this.env.os = "android" : /ipad|iphone|ipod/i.test(g) || /macintosh/i.test(g) && _ && !window.MSStream ? this.env.os = "ios" : this.env.os = "", this.env = Object.assign(this.env, window.PI_ENV_OVERRIDE || {}), this.subscribeToSystemEvents(), this.fetchConfig(), this.subscribeToInteraction() }; function o(e, t, n) { if ("undefined" != typeof FbPlayableAd) { if (this.totalEvents++, this.incrementSequenceNumber(e), this.validateEventLimits(e)) switch (e) { case i.LOADED_EVENT_NAME: FbPlayableAd.logGameLoad(), console.log("π: Logged frame event as FbPlayableAd.logGameLoad"); break; case i.STARTING_EVENT_NAME: case i.STARTED_EVENT_NAME: case i.FRAME_EVENT_NAME: case i.GAME_END_EVENT_NAME: FbPlayableAd.logLevelComplete(e), console.log("π: Logged " + e + " event as FbPlayableAd.logLevelComplete with " + e); break; case i.INTERACTION_EVENT_NAME: FbPlayableAd.logButtonClick("interaction", 0, 0), console.log("π: Logged interaction event as FbPlayableAd.logButtonClick"); break; default: console.log("π: Not logging " + e + " since it does not map to Facebook SDK") } } else console.warn("FbPlayableAd is not defined") } function s(e, t) { if (this.totalEvents++, this.incrementSequenceNumber(e), !this.validateEventLimits(e)) return; const n = ["custom", e = i.CUSTOM_EVENT_NAME_PREFIX + e, t || 0].join(":"); FbPlayableAd.logLevelComplete(n), console.log("π: Logged " + e + " event as FbPlayableAd.logLevelComplete with " + n) } i.prototype.constructor = i, i.LOAD_EVENT_NAME = "load", i.LOADED_EVENT_NAME = "loaded", i.STARTING_EVENT_NAME = "starting", i.STARTED_EVENT_NAME = "started", i.INTERACTION_EVENT_NAME = "interaction", i.CTA_EVENT_NAME = "cta", i.SAMPLE_EVENT_NAME = "sample", i.BOUNCE_EVENT_NAME = "bounce", i.FRAME_EVENT_NAME = "frame", i.CONFIG_EVENT_NAME = "config", i.GAME_END_EVENT_NAME = "game_end", i.INTERNAL_CLICK_EVENT_NAME = "internal.click", i.CUSTOM_EVENT_NAME_PREFIX = "custom.", i.SYSTEM_EVENT_NAME_PREFIX = "system.", i.PERFORMANCE_SAMPLE_INTERVAL = 5e3, i.BOUNCE_TIME_DIFFERENCE = 1e3, i.FACEBOOK_AD_NETWORK_NAME = "facebook", i.IRONSOURCE_AD_NETWORK_NAME = "ironsource", i.VUNGLE_AD_NETWORK_NAME = "vungle", i.MINTEGRAL_AD_NETWORK_NAME = "mintegral", i.MAX_EVENTS = 256, i.MAX_SEQUENCE_NUMBER = 32, i.IS_REWARDED_TRUE = 1, i.IS_REWARDED_FALSE = 0, i.IS_REWARDED_UNKNOWN = 2, i.IRON_SOURCE_PRODUCT_TYPE_REWARDED_VIDEO = "RewardedVideo", i.IRON_SOURCE_PRODUCT_TYPE_INTERSTITIAL = "Interstitial", Object.assign(i.prototype, { fetchConfig: function () { this.configRequestedAt = n(), this.configUrl ? this.configFetchPromise = fetch(this.configUrl).then((e => e.json())).catch((e => null)) : this.configFetchPromise = new Promise((e => { e(null) })) }, rollADice: function () { return window.PI_CONFIG_RANDOM || Math.random() }, selectPermutationFromUI: function () { return !location.search || location.search.indexOf("mv_debug=true") < 0 ? new Promise((e => { e() })) : new Promise((e => { const t = document.createElement("div"); t.style = "background: white; overflow: scroll; position: absolute; z-index: 1000000; top: 50%; left: 50%; width: 90%; height: 20%; transform: translateX(-50%) translateY(-50%);"; const n = function (n) { const i = window.pi.permutationWhitelist[n]; i ? (window.pi.env.permutationId = n, window.playgroundOverrides = i) : (window.pi.env.permutationId = 0, window.playgroundOverrides = {}), document.body.removeChild(t), e() }; for (const e in window.pi.permutationWhitelist) { const i = document.createElement("a"), o = parseInt(e, 10); i.innerText = "Permutation #" + e, i.style = "display: block; padding: 0.25em 0.5em; text-decoration: underline; position: static; color: black", i.onclick = function () { n(this) }.bind(o), t.appendChild(i) } document.body.appendChild(t) })) }, filterPermutations: function (e) { if (!this.permutationWhitelist) return e; let t = 0; for (let n = 0; n < e.length; n++) { const i = e[n]; i.weight = 1e6 * (i.threshold - t), t = i.threshold } const n = []; let i = 0; for (let t = 0; t < e.length; t++) { const o = e[t], s = this.permutationWhitelist[o.id]; if (s) { const e = { id: o.id, weight: o.weight, data: s }; n.push(e), i += e.weight } } let o = 0; for (let e = 0; e < n.length; e++) { const t = n[e]; o += t.weight / i, t.threshold = o } return n }, collectPermutationsForSegment: function (e, t, n) { const i = n[{ os: this.env.os, ad_network: this.env.adNetwork, ad_network_os: `${this.env.adNetwork}@${this.env.os}`, orientation: this.env.screenWidth > this.env.screenHeight ? "landscape" : "portrait", locale: this.env.locale, none: "" }[t]]; if (!i) return []; const o = i.map((([t, n]) => ({ id: t, weight: n, data: e[t] }))), s = o.reduce(((e, t) => e + t.weight), 0); let a = 0; return o.map(((e, t) => (a += e.weight / s, t === o.length - 1 && (a = 1), { ...e, threshold: a }))) }, selectPermutationFromConfig: function () { const e = Math.max(0, Math.min(this.configDelay, this.configTimeout - n())); this.configTimeoutPromise = new Promise((t => { setTimeout(t, e) })); const t = Promise.race([this.configFetchPromise, this.configTimeoutPromise]), o = this.rollADice(), s = this.configRequestedAt; return t.then((e => { if (!e || !e.permutations && !e.all_permutations) return; let t = e.permutations; e.segments && (t = window.pi.collectPermutationsForSegment(e.all_permutations, e.segment, e.segments)); const a = window.pi.filterPermutations(t); for (let e = 0; e < a.length; e++) { const t = a[e]; if (t.threshold >= o) { window.pi.env.permutationId = t.id, window.playgroundOverrides = t.data; break } } window.pi.logEvent(i.CONFIG_EVENT_NAME, !1, { timedelta: n() - s }) })) }, ready: function (e) { Promise.all([new Promise(Bridge.ready), this.selectPermutationFromConfig(), this.selectPermutationFromUI()]).then(e) }, attachTo: function (e) { this.app = e, this.app.events ? this.app.events.on("postrender", this.onPostRender, this) : this.app.on("postrender", this.onPostRender, this) }, subscribeToInteraction: function () { document.addEventListener("DOMContentLoaded", (() => { this.onInteractionCallback = this.onInteraction.bind(this), document.body.addEventListener("click", this.onInteractionCallback), document.body.addEventListener("touchstart", this.onInteractionCallback) })) }, onInteraction: function (e) { this.isEventLogged(i.FRAME_EVENT_NAME, 1) && !this.isEventLogged(i.INTERACTION_EVENT_NAME, 1) && (this.captureInteractionEventData(e), this.logInteraction(e)), this.isEventLogged(i.INTERNAL_CLICK_EVENT_NAME, 5) || (this.captureInteractionEventData(e), this.logEvent(i.INTERNAL_CLICK_EVENT_NAME, !1, {})) }, captureInteractionEventData: function (e) { const t = "touchstart" === e.type ? e.touches[0] : e; this.env.interactionClientX = 1 * t.clientX / window.innerWidth, this.env.interactionClientY = 1 * t.clientY / window.innerHeight }, startWatchingBounce: function () { this.onRequestAnimationFrameTimestamp = n(), this.onRequestAnimationFrameCallback = this.onRequestAnimationFrame.bind(this), this.onRequestAnimationFrameCallback() }, onRequestAnimationFrame: function () { const e = n() - this.onRequestAnimationFrameTimestamp; e > i.BOUNCE_TIME_DIFFERENCE && this.logBounce(e), this.onRequestAnimationFrameTimestamp = n(), window.requestAnimationFrame(this.onRequestAnimationFrameCallback) }, onPostRender: function () { window.innerWidth <= 1 || window.innerHeight <= 1 || (this.app && (this.app.events ? this.app.events.off("postrender", this.onPostRender, this) : this.app.off("postrender", this.onPostRender, this)), this.logFrame()) }, onFirstFrame: function () { window.innerWidth <= 1 || window.innerHeight <= 1 ? window.requestAnimationFrame(this.onFirstFrameCallback) : this.logFrame() }, logEvent: function (e, t, o) { return this.injectIronSourceAdData(), this.injectVungleAdData(), this.injectMintegralAdData(), this.totalEvents++, new Promise(((s, a) => { try { this.env.screenWidth = window.innerWidth, this.env.screenHeight = window.innerHeight; let r = Object.assign({}, this.env); const l = n(); this.app && this.app.counters && (r = Object.assign(r, this.app.counters.getSnapshot())); let d = this.timestamps.default; if (0 === e.indexOf(i.SYSTEM_EVENT_NAME_PREFIX) && (d = this.timestamps.system), r.timestamp = l - d.timestamp, r.timedelta = l - d.previousTimestamp, r.eventName = e, t && (d.previousTimestamp = l), e === i.FRAME_EVENT_NAME && (this.frameTimestamp = l), r.timestampSinceFrame = Math.max(-1, l - this.frameTimestamp), o && (r = Object.assign(r, o)), r.seqNo = this.incrementSequenceNumber(e), !this.validateEventLimits(e)) return; const E = r.errorMessage ? this.errorEndpointUrl : this.statsUrl; if (E) { const e = JSON.stringify(r), t = n(); this.displayEvents() && console.log("π: Logging event " + e + " to " + E), fetch(E, { method: "POST", mode: "no-cors", body: e }).then((() => { this.displayEvents() && console.log("π: Event delivered!"), window.pi.env.lastPing = n() - t | 0, s() }), (e => { console.warn("π: Event failed at dilvery: " + e), a(e) })) } else this.displayEvents() && console.log("π: Not logging event " + e + " as no endpoint URL is provided!"), s() } catch (e) { console.warn("π: Exception during submitting the event: " + e), a(e) } })) }, displayEvents: function () { return window.hasOwnProperty("DEBUG") && DEBUG || window.hasOwnProperty("TESTS") && TESTS }, logLoad: function () { this.logEvent(i.LOAD_EVENT_NAME, !0, null) }, logLoaded: function () { this.logEvent(i.LOADED_EVENT_NAME, !0, null) }, logStarting: function () { this.logEvent(i.STARTING_EVENT_NAME, !0, null) }, logStarted: function () { this.logEvent(i.STARTED_EVENT_NAME, !0, null), window.UnityEngine || (this.onFirstFrameCallback = this.onFirstFrame.bind(this), window.requestAnimationFrame(this.onFirstFrameCallback)), this.performanceSampleInterval = this.performanceSampleInterval || setInterval(this.logSample.bind(this), i.PERFORMANCE_SAMPLE_INTERVAL) }, logInteraction: function (e) { this.logEvent(i.INTERACTION_EVENT_NAME, !0, null) }, logCta: function () { this.logEvent(i.CTA_EVENT_NAME, !0, null), this.startWatchingBounce() }, logSample: function () { this.logEvent(i.SAMPLE_EVENT_NAME, !1, null) }, logBounce: function (e) { this.logEvent(i.BOUNCE_EVENT_NAME, !0, { timedelta: e }) }, logFrame: function () { this.logEvent(i.FRAME_EVENT_NAME, !0, null) }, logGameEnd: function () { this.logEvent(i.GAME_END_EVENT_NAME, !1, null) }, logCustomEvent: function (e, t) { return e = i.CUSTOM_EVENT_NAME_PREFIX + e, this.logEvent(e, !1, { intParameter: t || 0 }) }, isEventLogged: function (e, t) { return !!this.eventSequenceNumbers.hasOwnProperty(e) && this.eventSequenceNumbers[e] >= t }, injectIronSourceAdData: function () { if (!this.env.impressionId && this.env.adNetwork === i.IRONSOURCE_AD_NETWORK_NAME) try { const e = window.mraid ? mraid.getMraidAdData() : dapi.getAdData(); this.env.impressionId = e.UII, this.env.creativeId = e.creativeId || "", this.env.campaignId = e.campaignId || "", e.productType === i.IRON_SOURCE_PRODUCT_TYPE_REWARDED_VIDEO ? this.env.isRewarded = i.IS_REWARDED_TRUE : e.productType === i.IRON_SOURCE_PRODUCT_TYPE_INTERSTITIAL && (this.env.isRewarded = i.IS_REWARDED_FALSE) } catch (e) { } }, injectVungleAdData: function () { if (this.env.adNetwork === i.VUNGLE_AD_NETWORK_NAME && window.VungleHelper) try { !0 === window.VungleHelper.rewardedAd ? this.env.isRewarded = i.IS_REWARDED_TRUE : !1 === window.VungleHelper.rewardedAd && (this.env.isRewarded = i.IS_REWARDED_FALSE) } catch (e) { } }, injectMintegralAdData: function () { if (this.env.adNetwork === i.MINTEGRAL_AD_NETWORK_NAME && window.MW_INIT) try { const e = window.MW_INIT.isRewardAds(); !0 === e ? this.env.isRewarded = i.IS_REWARDED_TRUE : !1 === e && (this.env.isRewarded = i.IS_REWARDED_FALSE) } catch (e) { } }, incrementSequenceNumber: function (e) { return this.eventSequenceNumbers[e] = (this.eventSequenceNumbers[e] || 0) + 1, this.eventSequenceNumbers[e] }, validateEventLimits: function (e) { return this.totalEvents >= i.MAX_EVENTS ? (console.log("π: Skipping event " + e + " - already logged " + i.MAX_EVENTS + " events during the session"), !1) : !(this.eventSequenceNumbers[e] > i.MAX_SEQUENCE_NUMBER) || (console.log("π: Skipping event " + e + " - already logged " + i.MAX_SEQUENCE_NUMBER + " events of that name"), !1) }, subscribeToSystemEvents: function () { if (!1 === window.__playgroundInsightsEnableSystemEvents) return; if (!0 !== window.__playgroundInsightsEnableSystemEvents && Math.random() > .1) return; this.logEvent("system.load", !1, {}), ["DOMContentLoaded", "luna:build", "luna:start", "luna:startup:bundlesLoad", "luna:startup:loadSimpleAssetsAsync", "luna:startup:shaderReady", "luna:startup:loadComplexAssetsAsync", "luna:startup:loadPrefabsAsync", "luna:startup:loadScenesAsync", "luna:started"].forEach((e => { window.addEventListener(e, (() => { this.logEvent("system." + e.toLowerCase(), !0, {}) })) })) } }), window.pi = function (e, t, n, a, r, l, d, E, c, h) { window.pi = new i(e, t, n, a, r, l, d, E, c, h), e === i.FACEBOOK_AD_NETWORK_NAME && ("undefined" != typeof FbPlayableAd ? (window.pi.logEvent = o, window.pi.logCustomEvent = s, FbPlayableAd.initializeLogging(r + "/facebook", ["appId=", t, "&buildId=", n, "&signature=", a].join(""))) : console.warn("FbPlayableAd is not defined")), window.pi.logLoad() } }()